# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  inputs,
  ...
}:

let
  unstable-pkgs = import inputs.nixpkgs-unstable {
    system = pkgs.system;
    config.allowUnfree = true;
  };
in

{
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot.initrd.availableKernelModules = [
    "ehci_pci"
    "xhci_pci"
    "usbhid"
    "sr_mod"
    "virtio_balloon"
    "virtio_mmio"
    "virtio_net"
    "prl_tg"
  ];
  boot.initrd.kernelModules = [ "dm-crypt" ];
  boot.kernelModules = [ "prl_fs" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
    "xhci_hcd.quirks=0x40"
    "devices.pci_balloon=0"
  ];

  # Bootloader configuration
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # LUKS configuration
  boot.initrd.luks.devices."cryptroot" = {
    device = "/dev/disk/by-label/nixos-crypt";
    preLVM = true;
  };

  # Enable btrfs support
  boot.supportedFilesystems = [ "btrfs" ];

  # Filesystem configuration
  fileSystems."/" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@root"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  fileSystems."/home/aragao" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@home-aragao"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  fileSystems."/nix" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@nix"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  fileSystems."/tmp" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@tmp"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  fileSystems."/.snapshots" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@snapshots"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/nixos-boot";
    fsType = "vfat";
  };

  fileSystems."/swap" = {
    device = "/dev/mapper/cryptroot";
    fsType = "btrfs";
    options = [
      "subvol=@swap"
      "compress=zstd:1"
      "noatime"
      "space_cache=v2"
    ];
  };

  # Swap configuration (using btrfs subvolume)
  swapDevices = [
    {
      device = "/swap/swapfile";
      size = 16384; # 16GB swap file
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s5.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  hardware.parallels = {
    enable = true;
    #package = pkgs.linuxPackages.prl-tools;
  };

  nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [ "prl-tools" ];
}
